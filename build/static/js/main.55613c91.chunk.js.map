{"version":3,"sources":["images/electro-blue-heart.jpeg","Form.js","App.js","reportWebVitals.js","Login.js","Registration.js","Tips.js","index.js"],"names":["Form","props","handleChange","event","value","target","name","formData","state","setState","handlePredictClick","isLoading","fetch","headers","method","body","JSON","stringify","then","response","json","result","Age","Sex","CP","TrestBps","Cholesterol","FBS","restecg","thalach","exang","oldPeak","this","className","Group","as","Row","controlId","onChange","Label","column","sm","Col","Control","type","Check","label","Button","block","variant","disabled","onClick","id","React","Component","App","src","background","alt","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","LoginScreen","username","password","Container","fluid","style","header","form","FormGroup","formGroup","FormLabel","FormControl","placeholder","FormText","button","newText","width","height","fontSize","textAlign","paddingBottom","paddingTop","margin","Registration","Tips","tempMsgA","tempMsgB","rowStyle","tipsContainer","rHeader","rParagraph","list","tldr","faq","defaultActionKey","AccordionItem","eventKey","AccordionHeader","AccordionBody","padding","paddingLeft","paddingRight","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.55613c91.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/electro-blue-heart.1944c29e.jpeg\";","import React, { useState, Component } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport form from \"react-bootstrap/Form\";\nimport axios from 'axios'\n\nimport \"./Form.css\";\nimport { Col, FormGroup } from \"react-bootstrap\";\n\nclass Form extends React.Component {\n  \n  // const [slope, setSlope] = useState(\"\");\n  // const [ca, setCa] = useState(\"\");\n  // const [thal, setThal] = useState(\"\");\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      formData: {\n        Age: 4,\n        Sex: \"Male\",\n        CP: 1,\n        TrestBps: 0,\n        Cholesterol: 0,\n        FBS: 0,\n        restecg: 0,\n        thalach: 0,\n        exang: 0,\n        oldPeak: 0\n      },\n      result: \"\"\n    };\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    var formData = this.state.formData;\n    formData[name] = value;\n    this.setState({\n      formData\n    });\n  }\n\n  handlePredictClick = (event) => {\n    const formData = this.state.formData;\n    this.setState({ isLoading: true });\n    fetch('http://127.0.0.1:5000/prediction', \n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(formData)\n      })\n      .then(response => response.json())\n      .then(response => {\n        this.setState({\n          result: response.result,\n          isLoading: false\n        });\n      });\n  }\n\n  // const [Age, setAge] = useState(\"\");\n  // const [Sex, setSex] = useState(\"\");\n  // const [CP, setCP] = useState(\"\");\n  // const [TrestBps, setTrestBps] = useState(\"\");\n  // const [Cholesterol, setCholesterol] = useState(\"\");\n  // const [FBS, setFbs] = useState(\"\");\n  // const [restecg, setRestEcg] = useState(\"\");\n  // const [thalach, setThalach] = useState(\"\");\n  // const [exang, setExang] = useState(\"\");\n  // const [oldPeak, setOldPeak] = useState(\"\");\n\n\n  render() {\n    const isLoading = this.state.isLoading;\n    const formData = this.state.formData;\n    const result = this.state.result;\n\n    return (\n      <div className=\"background\">\n        <div className=\"Form\">\n        <form>\n          <form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\" onChange={this.handleChange}>\n            <form.Label column sm=\"2\">\n              Age\n            </form.Label>\n            <Col sm=\"10\">\n              <form.Control type=\"text\" />\n            </Col>\n            {/* <Form.Control>\n              {sepalLengths}\n                </Form.Control> */}\n          </form.Group>\n\n          <form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextPassword\" onChange={this.handleChange}>\n            <form.Label column sm=\"2\">\n              Sex\n            </form.Label>\n            <form.Check\n              type=\"radio\"\n              label=\"1\"\n              name=\"formHoriRadios\"\n            />\n            <form.Check\n              type=\"radio\"\n              label=\"0\"\n              name=\"formHoriRadios\"\n            />\n          </form.Group>\n\n          <form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\" onChange={this.handleChange}>\n            <form.Label column sm=\"2\">\n              cp\n            </form.Label>\n            <Col sm=\"10\">\n              <form.Control type=\"text\" />\n            </Col>\n          </form.Group>\n\n          <form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\" onChange={this.handleChange}>\n            <form.Label column sm=\"2\">\n              trestbps\n            </form.Label>\n            <Col sm=\"10\">\n              <form.Control type=\"text\" />\n            </Col>\n          </form.Group>\n\n          <form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\" onChange={this.handleChange}>\n            <form.Label column sm=\"2\">\n              chol\n            </form.Label>\n            <Col sm=\"10\">\n              <form.Control />\n            </Col>\n          </form.Group>\n\n          <form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\" onChange={this.handleChange}>\n            <form.Label column sm=\"2\">\n              fbs\n            </form.Label>\n            <Col sm=\"10\">\n              <form.Control />\n            </Col>\n          </form.Group>\n\n          <form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\" onChange={this.handleChange}>\n            <form.Label column sm=\"2\">\n              restecg\n            </form.Label>\n            <Col sm=\"10\">\n              <form.Control />\n            </Col>\n          </form.Group>\n\n          <form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\" onChange={this.handleChange}>\n            <form.Label column sm=\"2\">\n              thalach\n            </form.Label>\n            <Col sm=\"10\">\n              <form.Control />\n            </Col>\n          </form.Group>\n\n          <form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\" onChange={this.handleChange}>\n            <form.Label column sm=\"2\">\n              exang\n            </form.Label>\n            <Col sm=\"10\">\n              <form.Control />\n            </Col>\n          </form.Group>\n\n          <form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\" onChange={this.handleChange}>\n            <form.Label column sm=\"2\">\n              old peak\n            </form.Label>\n            <Col sm=\"10\">\n              <form.Control />\n            </Col>\n          </form.Group>\n          \n        \n            \n\n          {/* <form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\" onChange={(e) => setSlope(e.target.value)}>\n            <form.Label column sm=\"2\">\n              slope\n            </form.Label>\n            <Col sm=\"10\">\n              <form.Control />\n            </Col>\n          </form.Group>\n\n          <form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\" setCa>\n            <form.Label column sm=\"2\">\n              ca\n            </form.Label>\n            <Col sm=\"10\">\n              <form.Control />\n            </Col>\n          </form.Group>\n\n          <form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\" onChange={(e) => setThal(e.target.value)}>\n            <form.Label column sm=\"2\">\n              thal\n            </form.Label>\n            <Col sm=\"10\">\n              <form.Control />\n            </Col>\n          </form.Group> */}\n\n          <Button\n                  block\n                  variant=\"success\"\n                  disabled={isLoading}\n                  onClick={!isLoading ? this.handlePredictClick : null}>\n                  { isLoading ? 'Making prediction' : 'Predict' }\n          </Button>\n          </form>\n          {result === \"\" ? null :\n              (<Row>\n                <Col className=\"result-container\">\n                  <h5 id=\"result\">{result}</h5>\n                </Col>\n              </Row>)\n            }\n        </div>\n      </div>\n    );\n  }\n}\nexport default Form;","import './landing.css';\nimport background from './images/electro-blue-heart.jpeg'\nimport Button from \"react-bootstrap/Button\"\nimport {Link} from \"react-router-dom\"\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Form from './Form.js';\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <img src={background} className=\"img-bg\" alt=\"logo\" />\n        <p className=\"text\">          \n          Heart Disease Predictor\n        </p>\n        <div className=\"btn-wrap\">\n        <Button className=\"button\" variant=\"primary\" href='Form'> Start </Button>\n        <Button className=\"button\" variant=\"primary\" href='Login'> Login </Button>\n        <Button className=\"button\" variant=\"primary\" href='Registration'> Registration </Button>\n        <Button className=\"button\" variant=\"primary\" href='Tips'> Tips </Button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport {Form,FormGroup,FormLabel,FormControl,FormText} from 'react-bootstrap'\nimport { Row } from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container'\n\n//Add relevant imports\n\nexport default class LoginScreen extends React.Component{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            username:\"\",\n            password:\"\"\n        }\n    }\n\n    //render form\n    render(){\n        return (\n            <div id = \"loginForm\">\n                {/* <TextInput \n                    id = \"usernameInput\" \n                    onChangeText = {this.onUsernameChange}\n                    style = {style.form}\n                />\n                <TextInput \n                    id = \"passwordInput\" \n                    onChangeText = {this.onPasswordChange}\n                    style = {style.form}\n                />\n                <Button id = \"submitForm\" style = {style.button}>Submit</Button> */}\n                <Container fluid = \"md\">\n                    <Row>\n                        <h1 style = {style.header}>Login</h1>\n                    </Row>\n                    <Row>\n                        <Form style = {style.form}>\n                            <FormGroup style = {style.formGroup}>\n                                <FormLabel>Email</FormLabel>\n                                <FormControl type = \"email\" placeholder =\"Email\"></FormControl>\n                                {/* <FormText>Don't worry, you won't get spam.</FormText> */}\n                            </FormGroup>\n                            <FormGroup style = {style.formGroup}>\n                                <FormLabel>Password</FormLabel>\n                                <FormControl type = \"password\" placeholder =\"Password\"></FormControl>\n                                <FormText>Don't share your password with others.</FormText>\n                            </FormGroup>\n                            <Button id = \"submitForm\" style = {style.button}>Submit</Button> \n                            <FormGroup>\n                                <a href = \"\" style = {style.formGroup}>Forgot password?</a>\n                            </FormGroup>\n                        </Form>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n\n    //update username var on textfield update\n    onUsernameChange(newText){\n        this.state = {username:newText, password:this.state.password};\n    }\n\n    //update password var on textfield update\n    onPasswordChange(newText){\n        this.state = {username:this.state.username, password:newText};\n    }\n\n    //send state.email & state.password to firebase Auth\n    handleSubmit(){\n\n    }\n\n}\n\n//CSS styling\nconst style = {\n    header:{\n        width: \"50%\",\n        height: \"3vh\",\n        fontSize: \"200%\",\n        textAlign: \"\",\n        paddingBottom:\"4%\",\n        paddingTop:\"4%\",\n        margin: \"auto\"\n    },\n    button:{\n        \n    },\n    form:{\n        paddingBottom:\"1%\",\n        width:\"50%\",\n        margin: \"auto\"\n    },\n    formGroup:{\n        paddingBottom:\"1%\"\n    }\n\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport {Form,FormGroup,FormLabel,FormControl,FormText} from 'react-bootstrap'\nimport { Row } from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container'\n\n//Add relevant imports\n\nexport default class Registration extends React.Component{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            username:\"\",\n            password:\"\"\n        }\n    }\n\n    //render form\n    render(){\n        return (\n            <div id = \"registrationForm\">\n                {/* <TextInput \n                    id = \"usernameInput\" \n                    onChangeText = {this.onUsernameChange}\n                    style = {style.form}\n                />\n                <TextInput \n                    id = \"passwordInput\" \n                    onChangeText = {this.onPasswordChange}\n                    style = {style.form}\n                />\n                <Button id = \"submitForm\" style = {style.button}>Submit</Button> */}\n                <Container fluid = \"md\">\n                    <Row>\n                        <h1 style = {style.header}>Sign Up</h1>\n                    </Row>\n                    <Row>\n                        <Form style = {style.form}>\n                            <FormGroup style = {style.formGroup}>\n                                <FormLabel>First Name</FormLabel>\n                                <FormControl type = \"\" placeholder =\"First Name\"></FormControl>\n                            </FormGroup>\n                            <FormGroup style = {style.formGroup}>\n                                <FormLabel>Last Name</FormLabel>\n                                <FormControl type = \"\" placeholder =\"Last Name\"></FormControl>\n                            </FormGroup>\n                            <FormGroup style = {style.formGroup}>\n                                <FormLabel>Email</FormLabel>\n                                <FormControl type = \"email\" placeholder =\"Email\"></FormControl>\n                                {/* <FormText>Don't worry, you won't get spam.</FormText> */}\n                            </FormGroup>\n                            <FormGroup style = {style.formGroup}>\n                                <FormLabel>Password</FormLabel>\n                                <FormControl type = \"password\" placeholder =\"Password\"></FormControl>\n                                {/* <FormText>Don't share your password with others.</FormText> */}\n                            </FormGroup>\n                            <FormGroup style = {style.formGroup}>\n                                <FormLabel>Confirm Password</FormLabel>\n                                <FormControl type = \"password\" placeholder =\"Confirm Password\"></FormControl>\n                                {/* <FormText>Don't share your password with others.</FormText> */}\n                            </FormGroup>\n                            <Button id = \"submitForm\" style = {style.button}>Submit</Button> \n                            {/* <FormGroup>\n                                <a href = \"\" style = {style.formGroup}>Forgot password?</a>\n                            </FormGroup> */}\n                        </Form>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n\n    //update username var on textfield update\n    onUsernameChange(newText){\n        this.state = {username:newText, password:this.state.password};\n    }\n\n    //update password var on textfield update\n    onPasswordChange(newText){\n        this.state = {username:this.state.username, password:newText};\n    }\n\n    //send state.email & state.password to firebase Auth\n    handleSubmit(){\n\n    }\n\n}\n\n//CSS styling\nconst style = {\n    header:{\n        width: \"50%\",\n        height: \"3vh\",\n        fontSize: \"200%\",\n        textAlign: \"\",\n        paddingBottom:\"4%\",\n        paddingTop:\"4%\",\n        margin: \"auto\"\n    },\n    button:{\n        \n    },\n    form:{\n        paddingBottom:\"1%\",\n        width:\"50%\",\n        margin: \"auto\"\n    },\n    formGroup:{\n        paddingBottom:\"1%\"\n    }\n\n}","import React from 'react';\nimport Accordian from 'react-bootstrap/Accordion';\nimport AccordionBody from 'react-bootstrap/esm/AccordionBody';\nimport AccordionHeader from 'react-bootstrap/esm/AccordionHeader';\nimport AccordionItem from 'react-bootstrap/esm/AccordionItem';\nimport { Row } from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container'\n//Add relevant imports\n\nexport default class Tips extends React.Component{\n\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            tempMsgA: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lacinia facilisis libero, vitae accumsan metus condimentum nec. Nulla bibendum posuere condimentum. Aenean lacinia nulla vitae leo volutpat finibus. Morbi finibus pretium tincidunt. Cras quis eros quis augue dictum pulvinar. Nulla tempor feugiat eros, tempus iaculis nisi. Suspendisse lacinia gravida urna, sit amet pretium ante aliquam sit amet. Etiam vel risus ullamcorper, hendrerit risus vitae, mollis turpis. Curabitur nec magna at odio molestie luctus quis eget justo. Aenean consectetur nisl quis quam placerat, ut tempus tellus ornare. Praesent sollicitudin nisi vestibulum ligula venenatis, ac pulvinar quam pulvinar. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Sed sed enim nulla. Pellentesque convallis mauris quis mi varius, et tristique justo interdum. Morbi porta odio eu eros venenatis, sed feugiat enim condimentum. Fusce magna nisi, consectetur ac risus ac, efficitur consectetur purus.\",\n            tempMsgB: \"TLDR: Aliquam ut orci id orci euismod posuere porta ac sapien. Praesent faucibus enim quis augue eleifend, a egestas quam bibendum. Vestibulum sit amet finibus arcu. Nam nisi massa.\"\n        }\n    }\n\n    //render form\n    render(){\n        return ( \n            <Container fluid=\"md\">\n                <Row style = {style.rowStyle}>\n                    <div id = \"highRiskTips\"style = {style.tipsContainer}>\n                        <h1 id = \"rHeader\" style = {style.rHeader}>Tips to reduce risk of heart disease (prevantitive measures):</h1>\n                        <p1 id = \"rParagraph\" style ={style.rParagraph}>{this.state.tempMsgA}</p1>{/* Paragraph about what steps to take if you're determined to be at high risk of heart disease*/}\n                        <u1 style = {style.list}>\n                            <li>Item1</li>\n                            <li>Item2</li>\n                            <li>Item3</li>\n                            <li>Item4</li>\n                        </u1>\n                        <div id = \"tldr\" style = {style.tldr}>{this.state.tempMsgB}</div>\n                    </div>\n                </Row>\n                <Row style = {style.rowStyle}>\n                    <div  id = \"lowRiskTips\" style = {style.tipsContainer}>\n                        <h1 id = \"rHeader\" style = {style.rHeader}>Tips to maintain good health for low risk patients:</h1>\n                        <p1 id = \"rParagraph\" style ={style.rParagraph}>{this.state.tempMsgA}</p1>{/* Paragraph about what steps to take if you're determined to be at low risk of heart disease*/}\n                        <u1 style = {style.list}>\n                            <li>Item1</li>\n                            <li>Item2</li>\n                            <li>Item3</li>\n                            <li>Item4</li>\n                        </u1>\n                        <div id = \"tldr\" style = {style.tldr}>{this.state.tempMsgB}</div>\n                    </div>\n                </Row>\n                <Row style = {style.rowStyle}>\n                    <div id =\"faq\">\n                        <h1 id = \"rHeader\" style = {style.rHeader}>Frequently Asked Questions</h1>\n                        <Accordian style = {style.faq} defaultActionKey=\"0\">\n                            <AccordionItem eventKey=\"0\">\n                                <AccordionHeader>Question 1</AccordionHeader>\n                                <AccordionBody>\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lacinia facilisis libero, vitae accumsan metus condimentum nec. \n                                </AccordionBody>\n                            </AccordionItem>\n                            <AccordionItem eventKey=\"1\">\n                                <AccordionHeader>Question 2</AccordionHeader>\n                                <AccordionBody>\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lacinia facilisis libero, vitae accumsan metus condimentum nec. \n                                </AccordionBody>\n                            </AccordionItem>\n                            <AccordionItem eventKey=\"2\">\n                                <AccordionHeader>Question 3</AccordionHeader>\n                                <AccordionBody>\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lacinia facilisis libero, vitae accumsan metus condimentum nec. \n                                </AccordionBody>\n                            </AccordionItem>\n                            <AccordionItem eventKey=\"3\">\n                                <AccordionHeader>Question 4</AccordionHeader>\n                                <AccordionBody>\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lacinia facilisis libero, vitae accumsan metus condimentum nec. \n                                </AccordionBody>\n                            </AccordionItem>\n                            <AccordionItem eventKey=\"4\">\n                                <AccordionHeader>Question 5</AccordionHeader>\n                                <AccordionBody>\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed lacinia facilisis libero, vitae accumsan metus condimentum nec. \n                                </AccordionBody>\n                            </AccordionItem>\n                        </Accordian>\n                    </div>                   \n                </Row>\n            </Container>\n\n\n        );\n    }\n\n}\n\n//CSS styling\nconst style = {\n    \n    rHeader:{\n        width: \"100%\",\n        height: \"3vh\",\n        fontSize: \"200%\",\n        textAlign: \"center\"\n\n    },\n    rParagraph:{\n        width: \"100%\",\n        height: \"10vh\",\n        fontSize: \"100%\",\n        textAlign: \"center\",  \n        padding: \"0px\"\n    },\n    tldr:{\n        paddingTop:\"0px\",\n        width: \"100%\",\n        fontSize: \"150%\",\n        textAlign: \"center\",  \n        padding: \"0px\"\n    },\n    tipsContainer:{\n        paddingLeft:\"5%\",\n        paddingRight:\"5%\"\n    }, \n    list:{\n        width: \"100%\",\n        height: \"10vh\",\n        fontSize: \"100%\",\n        textAlign: \"center\",  \n        padding: \"0px\"\n    },\n    faq:{\n        margin: \"auto\",\n        width: \"50%\",\n        height: \"10vh\",\n        fontSize: \"100%\",\n        padding: \"10px\"\n    },\n    rowStyle:{\n        paddingBottom:\"5%\"\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Form from './Form'\nimport Login from './Login'\nimport Registration from './Registration'\nimport Tips from './Tips';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Route, Routes, Switch } from \"react-router-dom\";\n\n\nconst HomePage = () => {\n  return <App />;\n}\n\nReactDOM.render(\n    <BrowserRouter>\n    <Routes>\n    {/* <Route path=\"/\" component={App} exact={true} /> */}\n    <Route path=\"/\" element={<App />} />\n    <Route path=\"/form\" element={<Form />} />\n    <Route path=\"/login\" element={<Login />} />\n    <Route path=\"/registration\" element={<Registration />} />\n    <Route path=\"/tips\" element={<Tips />} />\n    </Routes>\n    {/* <App /> */}\n    \n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Router>\n//     <App />\n//     </Router>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}